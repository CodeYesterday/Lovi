@using CodeYesterday.Lovi.Input

<RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="@(Toolbar?.AddGap == true ? "0.5em" : "0")" class="tool-bar-style">
    @if (Toolbar != null)
    {
        foreach (var toolBarItem in Toolbar.Items)
        {
            switch (toolBarItem)
            {
                case ToolbarButton button:
                    <ToolbarButtonControl Button="@button" />
                    break;

                case ToolbarCheckBox checkBox:
                    <ToolbarCheckBoxControl CheckBox="@checkBox" />
                    break;

                case ToolbarMenuButton menuButton:
                    <RadzenButton Text="@menuButton.Title"
                                  Icon="@menuButton.Icon"
                                  Visible="@menuButton.IsVisible"
                                  Variant="ToolbarButtonControl.DefaultButtonVariant"
                                  ButtonStyle="ToolbarButtonControl.DefaultButtonStyle"
                                  Size="ToolbarButtonControl.DefaultButtonSize"
                                  Click="@(args => OpenButtonMenu(args, menuButton))"
                                  MouseEnter="e => OnShowToolbarItemTooltip(e, toolBarItem.Tooltip)" />
                    break;
            }
        }
    }
</RadzenStack>

<style>
    .tool-bar-style {
        background-color: var(--rz-base-background-color);
        padding: 1px 2px;
        border-radius: 2px;
    }
</style>